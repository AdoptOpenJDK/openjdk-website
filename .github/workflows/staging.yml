name: Staging

on:
  pull_request_target:
    types: [opened, synchronize, edited, reopened]
    branches: [ master ]

jobs:
  staging:
    name: Website Staging
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
      with:
        path: gh-actions
        fetch-depth: 0

    - name: Setup branch
      run: |
        GIT_REMOTE_REF=refs/pull/$PR_NUMBER/head
        cd gh-actions
        git fetch origin $GIT_REMOTE_REF:testBranch
        git checkout testBranch
      env:
        PR_NUMBER: ${{ github.event.pull_request.number }}
        
    - name: Add Banner
      run: |
        cd gh-actions
        cat >>"src/handlebars/partials/header.handlebars" <<-EOF
        <div class="alert align-center">
        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
        This is a staging server, currently hosting <a class="light-link" href="https://github.com/AdoptOpenJDK/openjdk-website/pull/$PR_NUMBER"><var>PR $PR_NUMBER</var></a>
        </div>
        EOF
      env:
        PR_NUMBER: ${{ github.event.pull_request.number }}

    - uses: actions/setup-node@v1
      with:
        node-version: '10'

    - name: Install dependencies
      run: |
        npm install --global gulp-cli
        cd gh-actions
        npm install
        gulp build

    - name: Setup git config
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Build Website Files
      run: |
        cd gh-actions
        git add src/handlebars/partials/header.handlebars
        # Force-add the ignored build output files:
        git add -f dist
        git add -f *.html
        git add -f sitemap.xml
        git add -f robots.txt
        git add -f package-lock.json
        # Commit these files to Master, then retrieve the entire repo
        # (including build output) in the gh-pages branch:
        git commit -m "Add built files"
        git checkout gh-pages
        git reset --hard testBranch
        # Delete every file except for .html files, then every dir except for /dist:
        # (Both of these act only on the root dir - not recursively searching dirs)
        find . -type f ! -name '*.html' ! -name '*.pdf' -maxdepth 1 -mindepth 1  -delete
        find . -type d -not -name 'dist' -not -name '.git' -maxdepth 1 -mindepth 1 -exec rm -rf {} \;
        # After this bulk-delete, copy across some other necessary files from the master branch:
        cat >"CNAME" <<-EOF
        staging.adoptopenjdk.net
        EOF
        cat >"robots.txt" <<-EOF
        User-agent: *
        Disallow: /
        EOF
        git checkout testBranch -- NOTICE
        git checkout testBranch -- LICENSE
        git checkout testBranch -- sitemap.xml
        echo "These files are ready to be moved onto the production web server:"
        ls
        # Check that the essential files (/dist and .html) exist before pushing:
        if [ ! -d dist ]; then
            echo "/dist does not exist. Exiting."
            exit 1
        fi
        if [ ! -f index.html ]; then
            echo ".html files do not exist. Exiting."
            exit 1
        fi
        rm -rf .git

    - name: Checkout Staging repo
      uses: actions/checkout@v2
      with:
        repository: AdoptOpenJDK/openjdk-website-staging
        path: openjdk-website-staging
        token: ${{ secrets.ACCESS_TOKEN }}
        ssh-key: ${{ secrets.ADOPT_BOT_SSH_PRIVATE }}

    - run: |
        if [[ ! -d "openjdk-website-staging/$PR_NUMBER" ]]; then
          mkdir openjdk-website-staging/$PR_NUMBER
        fi
        cp -R gh-actions/* openjdk-website-staging/$PR_NUMBER
        cd openjdk-website-staging
        git add .
        git commit -m "Remove development files"
        git push origin gh-pages
      env:
        PR_NUMBER: ${{ github.event.pull_request.number }}

    - uses: mshick/add-pr-comment@v1
      with:
        message: Now on staging server [here](https://staging.adoptopenjdk.net/${{ env.PR_NUMBER }}).
        repo-token: ${{ secrets.ACCESS_TOKEN }}
        repo-token-user-login: 'adoptopenjdk-github-bot'
        allow-repeats: true
      env:
        PR_NUMBER: ${{ github.event.pull_request.number }}
